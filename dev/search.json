[{"path":[]},{"path":"https://gmailr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://gmailr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://gmailr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://gmailr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://gmailr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://gmailr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://gmailr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://gmailr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://gmailr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://gmailr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://gmailr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://gmailr.r-lib.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 gmailr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://gmailr.r-lib.org/dev/articles/gmailr.html","id":"quickstart","dir":"Articles","previous_headings":"","what":"Quickstart","title":"gmailr","text":"short document getting speed gmailr quickly.","code":""},{"path":"https://gmailr.r-lib.org/dev/articles/gmailr.html","id":"external-setup","dir":"Articles","previous_headings":"","what":"External Setup","title":"gmailr","text":"order use gmailr need create google project . easiest way via Python Quickstart. Click Enable Gmail API button. resulting dialog click DOWNLOAD CLIENT CONFIGURATION computer. Call gm_auth_configure(path = \"path//downloaded/json\") Set GMAILR_APP environment variable location JSON file, convienent .Renviron file usethis::edit_r_environ(). calling gm_auth_configure() arguments. Call gm_auth() start OAuth flow verify google like gmailr project access email. get scary warning untrusted application, application one just created, click advanced Go gmailr proceed oauth flow. want authenticate fewer scopes default use scopes parameter gm_auth(). can see full list available scopes gm_scopes(). heavy usage Gmail API requires payment, use API people free. use usethis::edit_r_environ() set GMAILR_EMAIL GMAILR_APP, oauth token can simply run gm_auth_configure() arguments top script setup application.","code":""},{"path":"https://gmailr.r-lib.org/dev/articles/gmailr.html","id":"writing-new-emails","dir":"Articles","previous_headings":"","what":"Writing new emails","title":"gmailr","text":"Create new email gm_mime() helper functions. testing recommended use gm_create_draft() verify email formatted expect automating (desired) gm_send_message(). can add file attachment message gm_attach_file().","code":"test_email <-   gm_mime() |>   gm_to(\"PUT_A_VALID_EMAIL_ADDRESS_THAT_YOU_CAN_CHECK_HERE\") |>   gm_from(\"PUT_THE_GMAIL_ADDRESS_ASSOCIATED_WITH_YOUR_GOOGLE_ACCOUNT_HERE\") |>   gm_subject(\"this is just a gmailr test\") |>   gm_text_body(\"Can you hear me now?\")  # Verify it looks correct gm_create_draft(test_email)  # If all is good with your draft, then you can send it gm_send_message(test_email) write.csv(\"mtcars.csv\", mtcars) test_email <- gm_attach_file(\"mtcars.csv\")  # Verify it looks correct gm_create_draft(test_email)  # If so, send it gm_send_message(test_email)"},{"path":"https://gmailr.r-lib.org/dev/articles/gmailr.html","id":"reading-emails","dir":"Articles","previous_headings":"","what":"Reading emails","title":"gmailr","text":"gmail shows threads messages web UI, can retrieve threads gm_threads(), retrieve specific thread gm_thread()","code":"# view the latest thread my_threads <- gm_threads(num_results = 10)  # retrieve the latest thread by retrieving the first ID  latest_thread <- gm_thread(gm_id(my_threads)[[1]])  # The messages in the thread will now be in a list latest_thread$messages  # Retrieve parts of a specific message with the accessors my_msg <- latest_thread$messages[[1]]  gm_to(my_msg) gm_from(my_msg) gm_date(my_msg) gm_subject(my_msg) gm_body(my_msg)  # If a message has attachments, download them all locally with `gm_save_attachments()`. gm_save_attachments(my_msg)"},{"path":"https://gmailr.r-lib.org/dev/articles/oauth-client.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Set up an OAuth client","text":"multi-step process ’s easy get lost weeds, overview. include detail , someone ’s done might able work just checklist: Sign Google Cloud console https://console.cloud.google.com/. Create Google Cloud project. /select target project. Enable Gmail API project. Specify user type, .e. external vs. internal. individual Google user, operating outside Google Workspace, must choose external. Inside organization, possible choose internal. Select allowed scopes. recommend nonsensitive default scopes, plus Gmail-related scopes. List allowed users. applies project external user type “testing” app status (opposed “production”). must choose “Desktop app” “Web” client type. cover make decision . Put downloaded JSON place gmailr can discover provide filepath via environment variable provide directly gm_auth_configure(path =).","code":""},{"path":"https://gmailr.r-lib.org/dev/articles/oauth-client.html","id":"sign-in-to-google-cloud-console","dir":"Articles","previous_headings":"","what":"Sign in to Google Cloud console","title":"Set up an OAuth client","text":"focus user never used Google Cloud authenticating individual (versus user within organization). rationale users benefit detailed documentation. may eventually create documentation focused different type user, , meantime, hopefully types users can also gain something article. Go Google Cloud console sign : https://console.cloud.google.com/  Since first usage Google Cloud, need agree Terms Service.  point, might see offer start free trial Google Cloud Platform, necessary order create OAuth client. might interested free trial want experiment Google Cloud services normally cost money, BigQuery Maps. can activate free trial, now, later, never; nothing ability create OAuth client works gmailr.","code":""},{"path":"https://gmailr.r-lib.org/dev/articles/oauth-client.html","id":"create-a-google-cloud-project","dir":"Articles","previous_headings":"","what":"Create a Google Cloud project","title":"Set up an OAuth client","text":"Next need select project. Locate click “Select project” button.  Since new user, presumably don’t existing projects. Click “NEW PROJECT” upper right corner. fine see “organization” ; ’s expected Google account ’re using exists outside Google Workspace.  Now “New Project” screen.  strongly recommend accept automatically generated project name. Instead recommend give project meaningful (least memorable) label reminds purpose use project name project ID. happy project name ID, click “CREATE” button. example, using “gmailr-fun” project name (ID). Now see working within intended target project.","code":""},{"path":"https://gmailr.r-lib.org/dev/articles/oauth-client.html","id":"enable-the-gmail-api-for-the-project","dir":"Articles","previous_headings":"","what":"Enable the Gmail API for the project","title":"Set up an OAuth client","text":"Now configure APIs & Services project. various ways get screen, depending start type Google account. Hopefully can find way something like :  Click “APIs & Services” “Enabled APIs & services”. Don’t surprised APIs already enabled, even new project; happens default. page reveals Gmail API already enabled, can move (won’t true new project, true existing project). ’s screen might look new project:  Click “+ ENABLE APIS SERVICES”. next screen, search Gmail API select . get screen like :  Click “ENABLE”.","code":""},{"path":"https://gmailr.r-lib.org/dev/articles/oauth-client.html","id":"configure-the-oauth-consent-screen","dir":"Articles","previous_headings":"","what":"Configure the OAuth consent screen","title":"Set up an OAuth client","text":"step may feel unexpected, may sure “OAuth consent screen” even . can help connect goals Google frames task. Google’s vocabulary step frequently refers application app. can basically think Google Cloud project Google means app application. project/app basically refers “work plan Gmail API R”. ’s time go “OAuth consent screen”, one pages can access APIs & Services. Click “OAuth consent screen”.  quite difficult OAuth “app” works just anyone. onerous registration verification process. tidyverse team done Drive, Sheets, BigQuery APIs, makes auth easier casual R use googledrive, googlesheets4, bigrquery packages. essentially impossible project Gmail API enabled. gmailr users create OAuth client. Users googledrive, googlesheets4, bigrquery packages may elect use OAuth client, obtained process described , except different APIs enabled project. Since project part Google Workspace, must choose “External” user type. may seem weird, since part organization, thing internal user. Select “External” user type, click “CREATE”.  (article focuses solo user part Google Workspace, process substantial overlap creating OAuth client use within Google Workspace organization. context, “Internal” user type available probably best choice.) Now edit “App information”. “App name”, good default use label used project name project ID, e.g. “gmailr-fun”. good default “User support email” whatever Google email address logged .  can leave “App logo” “App domain” unconfigured. “Developer contact information”, good default whatever Google email address logged , also used “User support email”. setup terminology makes sense really creating application multiple users. ’s weird solo user, .  Click “SAVE CONTINUE”. Now add scopes. Click “ADD REMOVE SCOPES”.  First, select (nonsensitive) scopes: \".../auth/userinfo.email\" \".../auth/userinfo.profile\" \"openid\" makes easier tell user associated OAuth token downstream. particular, gargle package always adds \".../auth/userinfo.email\" scope obtaining user tokens, definitely want enabled .  , use “Filter” feature find scopes associated Gmail API. may want adjust “Rows per page” number high enough fit Gmail scopes one page (time writing, 14). default, recommend selecting Gmail scopes, ease downstream use. can always request token narrower scope call like gm_auth(scopes = \"gmail.readonly\"). don’t select scope , scope never available gm_auth(). specific reason conservative know plan “read ” work, can extra careful enable specific scopes . ’re done selecting scopes, click “UPDATE”.  returned “Edit app registration” screen, things look quite different, thanks scopes added. look something like :  Scroll bottom click “SAVE CONTINUE”.  Now add test user: ! Click “+ ADD USERS”.  Enter email address click “ADD”.  returned “Edit app registration” screen, things look different, thanks test user added. look something like :  Click “SAVE CONTINUE”. Now arrive “Summary” screen, summarizes ’ve entered “OAuth consent screen”, “Scopes”, “Test users”.","code":""},{"path":"https://gmailr.r-lib.org/dev/articles/oauth-client.html","id":"create-an-oauth-client","dir":"Articles","previous_headings":"","what":"Create an OAuth client","title":"Set up an OAuth client","text":"Now go “Credentials” section “APIs & Services”. can get various ways, depending start.   ’s screen look new user new project, .e. credentials yet.  ’s screen might look project existed long time, many existing credentials various types.  Now create new OAuth client. Click “+ CREATE CREDENTIALS”.  Select “OAuth client ID”.  Next must choose “Application type”.  ’s choose application type: Desktop app: use ’re going use gmailr local computer. technically, appropriate setting httpuv R package able spin local web server (gargle behind scenes ). Web application: use ’re going use gmailr sort hosted cloud context. Examples include: RStudio Server, Posit Workbench, Posit Cloud, Google Colaboratory. client type needed “--bound” (oob) auth flow gargle-specific variant known pseudo-oob. Let’s say choose “Desktop app”. , ’ll get chance give client name. encourage give label meaning can hold head minutes time. example, use name “desktop-aardvark”. incorporate “desktop” remind type client “aardvark” just random animal. need add another client later (maybe “Web application” type), might call one “web-baboon”. get idea.  see happy news OAuth client created:  want “DOWNLOAD JSON”, rest assured , says: “client ID secret can always accessed Credentials APIs & Services” (including downloadable JSON). one screens need panic can never access information . Click “DOWNLOAD JSON” .json file downloaded wherever browser configured put things. filename look like (longer random): ’re still looking “OAuth client created” pop-, click “OK”. Now “Credentials” screen within “APIs & Services” look like :  see successfully created OAuth client ID, name gave . ever need access JSON , come back “Credentials” screen. existing OAuth client ID download button.","code":"client_secret_8675309-nobody4overcome4nuanced.apps.googleusercontent.com"},{"path":"https://gmailr.r-lib.org/dev/articles/oauth-client.html","id":"tell-gmailr-about-your-oauth-client","dir":"Articles","previous_headings":"","what":"Tell gmailr about your OAuth client","title":"Set up an OAuth client","text":"gm_auth_configure() function use tell gmailr OAuth client. best provide filepath downloaded JSON path argument: couple ways can work. can provide actual path R code. makes sense settings. users take advantage default value path, calls gm_default_oauth_client(). gm_default_oauth_client() knows look JSON specific locations environment variables. Unless reason otherwise, might well arrange OAuth client JSON discovered gm_default_oauth_client(). order preference: Move downloaded JSON file location returned rappdirs::user_data_dir(\"gmailr\"). accomplish move code like : ’s important target folder one file whose name “looks” like Google OAuth client file. Place downloaded JSON file location (perhaps control). Inform gmailr recording filepath GMAILR_OAUTH_CLIENT environment variable. .Renviron, something like : ’ve successfully made OAuth client automatically discoverable, able call gm_auth_configure() arguments, like , immediately use gm_oauth_client() confirm client configured: able “just use” gmailr, without explicit call gm_auth(). Note see slightly scary screens using personal OAuth client one test users. anything triggers gmailr auth, ’ll see :  click “Continue”, ’ll need say exactly permissions willing grant:  pre-checked items reflect nonsensitive scopes mentioned earlier. still need explicitly check box “Read, compose, send, permanently delete email Gmail”. Note exact wording permissions last item may vary, specify non-default scopes gm_auth() call. Click “Continue” obtain user token , hopefully, live gmailr-powered dreams controlling Gmail R.","code":"gm_auth_configure <- function(...,                               path = gm_default_oauth_client(),                               ...) { ... } path_old <- \"~/Downloads/client_secret_123-abc.apps.googleusercontent.com.json\" d <- fs::dir_create(rappdirs::user_data_dir(\"gmailr\"), recurse = TRUE) fs::file_move(path_old, d) GMAILR_OAUTH_CLIENT=/path/to/my/gmailr/oauth-client.json library(gmailr)  gm_auth_configure()  gm_oauth_client() #> <gargle_oauth_client> #> name: ... #> id: ... #> secret: <REDACTED> #> type: installed #> redirect_uris: ..."},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/articles/sending_messages.html","id":"text","dir":"Articles","previous_headings":"Constructing a MIME message","what":"Text","title":"Sending Messages With Gmailr","text":"First construct simple text message can convert message properly formatted MIME message using .character().","code":"text_msg <- gm_mime() |>   gm_to(\"james.f.hester@gmail.com\") |>   gm_from(\"me@somewhere.com\") |>   gm_text_body(\"Gmailr is a very handy package!\") strwrap(as.character(text_msg)) #> [1] \"MIME-Version: 1.0\\r Date: Thu, 01 Jun 2023 04:11:19 GMT\\r To:\"        #> [2] \"james.f.hester@gmail.com\\r From: me@somewhere.com\\r Content-Type:\"    #> [3] \"multipart/mixed; boundary=07f446110ff5fb70f31de07f09288829\\r\"         #> [4] \"--07f446110ff5fb70f31de07f09288829\\r MIME-Version: 1.0\\r Date: Thu,\"  #> [5] \"01 Jun 2023 04:11:19 GMT\\r Content-Type: text/plain; charset=utf-8;\"  #> [6] \"format=flowed\\r Content-Transfer-Encoding: quoted-printable\\r Gmailr\" #> [7] \"is a very handy package!\\r --07f446110ff5fb70f31de07f09288829--\\r\""},{"path":"https://gmailr.r-lib.org/dev/articles/sending_messages.html","id":"html","dir":"Articles","previous_headings":"Constructing a MIME message","what":"HTML","title":"Sending Messages With Gmailr","text":"can also construct html messages. customary provide text message along html message, modern email clients strictly necessary.","code":"html_msg <- gm_mime() |>   gm_to(\"james.f.hester@gmail.com\") |>   gm_from(\"me@somewhere.com\") |>   gm_html_body(\"<b>Gmailr<\/b> is a <i>very<\/i> handy package!\")"},{"path":"https://gmailr.r-lib.org/dev/articles/sending_messages.html","id":"attachments","dir":"Articles","previous_headings":"Constructing a MIME message","what":"Attachments","title":"Sending Messages With Gmailr","text":"can add attachments message two ways. data file, use gm_attach_file(). mime type automatically guessed mime::guess_type, can specify type parameter. data already loaded R, can use gm_attach_part() attach binary data file.","code":"write.csv(file = \"iris.csv\", iris)  msg <- html_msg |>   gm_subject(\"Here are some flowers\") |>   gm_attach_file(\"iris.csv\") msg <- html_msg |>   gm_attach_part(part = charToRaw(\"attach me!\"), name = \"please\")"},{"path":"https://gmailr.r-lib.org/dev/articles/sending_messages.html","id":"including-images","dir":"Articles","previous_headings":"Constructing a MIME message","what":"Including images","title":"Sending Messages With Gmailr","text":"can also add use attached images HTML setting Content ID feature mime emails. can done referencing image via <img src=cid:xyz> tag using id argument send_file(). tag value can unique identifier. E.g. example including ggplot2 image","code":"# First create a plot to send, and save it to mtcars.png mtcars$gear <- as.factor(mtcars$gear)  png(\"mtcars.png\", width = 400, height = 400, pointsize = 12) with(   mtcars,   plot(hp,     mpg,     col = as.factor(gear),     pch = 19,     xlab = \"Horsepower\",     ylab = \"Miles / gallon\"   ) ) legend(\"topright\",   title = \"# gears\",   pch = 19,   col = seq_along(levels(mtcars$gear)),   legend = levels(mtcars$gear) ) dev.off() #> agg_png  #>       2  # Next create an HTML email that references the plot as 'foobar' email <- gm_mime() |>   gm_to(\"someaddress@somewhere.com\") |>   gm_from(\"someaddress@somewhere.com\") |>   gm_subject(\"Cars report\") |>   gm_html_body(     '<h1>A plot of <b>MotorTrend<\/b> data <i>(1974)<\/i><\/h1>     <br><img src=\"cid:foobar\">'   ) |>   gm_attach_file(\"mtcars.png\", id = \"foobar\")"},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/articles/sending_messages.html","id":"create-draft","dir":"Articles","previous_headings":"Uploading","what":"Create Draft","title":"Sending Messages With Gmailr","text":"can upload mime message gmail drafts using gm_create_draft(). sure give least compose permissions first.","code":"gm_create_draft(file_attachment)"},{"path":"https://gmailr.r-lib.org/dev/articles/sending_messages.html","id":"insert","dir":"Articles","previous_headings":"Uploading","what":"Insert","title":"Sending Messages With Gmailr","text":"inserts message directly mailbox, bypassing gmail’s default scanning classification algorithms.","code":"gm_insert_message(file_attachment)"},{"path":"https://gmailr.r-lib.org/dev/articles/sending_messages.html","id":"import","dir":"Articles","previous_headings":"Uploading","what":"Import","title":"Sending Messages With Gmailr","text":"imports email though normal message, scanning classification normal email.","code":"gm_insert_message(file_attachment)"},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/articles/sending_messages.html","id":"draft","dir":"Articles","previous_headings":"Sending","what":"Draft","title":"Sending Messages With Gmailr","text":"gm_send_draft() sends email using draft_id existing draft (possibly created gm_create_draft()).","code":"my_drafts <- gm_drafts()  gm_send_draft(gm_id(my_drafts, \"draft_id\")[1])"},{"path":"https://gmailr.r-lib.org/dev/articles/sending_messages.html","id":"message","dir":"Articles","previous_headings":"Sending","what":"Message","title":"Sending Messages With Gmailr","text":"can also send email message directly mime object using gm_send_message().","code":"gm_send_message(file_attachment)"},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/articles/sending_messages.html","id":"gmail-api-error-400-mail-service-not-enabled","dir":"Articles","previous_headings":"Troubleshooting","what":"Gmail API error 400: Mail service not enabled","title":"Sending Messages With Gmailr","text":"possible high-functioning Google account Gmail enabled. example, account might fully operational respect Google Drive yet mail capabilities. account used Gmail API therefore gmailr. However, still able complete gmailr authorization process via gmail_auth(). problem reveal upon first attempt use API look something like : can confirm account’s lack mail capability visiting https://mail.google.com/mail/ logged . don’t already Gmail, link gives option adding mail existing account creating new, mail-capable account.","code":"Error in gmailr_POST(c(\"messages\", \"send\"), user_id, class = \"gmail_message\",  :    Gmail API error: 400   Mail service not enabled"},{"path":"https://gmailr.r-lib.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jim Hester. Author. Jennifer Bryan. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://gmailr.r-lib.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hester J, Bryan J (2023). gmailr: Access 'Gmail' 'RESTful' API. https://gmailr.r-lib.org, https://github.com/r-lib/gmailr.","code":"@Manual{,   title = {gmailr: Access the 'Gmail' 'RESTful' API},   author = {Jim Hester and Jennifer Bryan},   year = {2023},   note = {https://gmailr.r-lib.org, https://github.com/r-lib/gmailr}, }"},{"path":"https://gmailr.r-lib.org/dev/index.html","id":"gmailr","dir":"","previous_headings":"","what":"Access the Gmail RESTful API","title":"Access the Gmail RESTful API","text":"Exposing Gmail API R.","code":""},{"path":"https://gmailr.r-lib.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access the Gmail RESTful API","text":"Install released version gmailr CRAN: install development version GitHub :","code":"install.packages(\"gmailr\") # install.packages(\"pak\") pak::pak(\"r-lib/gmailr\")"},{"path":"https://gmailr.r-lib.org/dev/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Access the Gmail RESTful API","text":"order use gmailr, need create OAuth client. documented article Set OAuth client. successful setup, typical gmailr-using script start like : gm_auth_configure() function discover configure OAuth client. Alternatively, can also accept explicit path client JSON.","code":"library(gmailr) gm_auth_configure()  # your gmailr code ..."},{"path":"https://gmailr.r-lib.org/dev/index.html","id":"writing-new-emails","dir":"","previous_headings":"","what":"Writing new emails","title":"Access the Gmail RESTful API","text":"Create new email gm_mime() helper functions (gm_from(), gm_to(), etc.). developing message, might want use gm_create_draft() verify email formatted expect. can send draft gm_send_draft() send original MIME message gm_send_message(). can add file attachment message gm_attach_file().","code":"test_email <-   gm_mime() |>   gm_to(\"PUT_A_VALID_EMAIL_ADDRESS_THAT_YOU_CAN_CHECK_HERE\") |>   gm_from(\"PUT_THE_GMAIL_ADDRESS_ASSOCIATED_WITH_YOUR_GOOGLE_ACCOUNT_HERE\") |>   gm_subject(\"this is just a gmailr test\") |>   gm_text_body(\"Can you hear me now?\")  # Verify it looks correct, i.e. look at your Gmail drafts in the browser d <- gm_create_draft(test_email)  # If all is good with your draft, then you can send the existing draft gm_send_draft(d)  # or the existing MIME message gm_send_message(test_email) write.csv(mtcars,\"mtcars.csv\") test_email <- test_email |> gm_attach_file(\"mtcars.csv\")  # Verify it looks correct d <- gm_create_draft(test_email)  # If so, send it gm_send_draft(d)"},{"path":"https://gmailr.r-lib.org/dev/index.html","id":"reading-emails","dir":"","previous_headings":"","what":"Reading emails","title":"Access the Gmail RESTful API","text":"gmail shows threads messages web UI, can retrieve threads gm_threads(), retrieve specific thread gm_thread()","code":"# view the latest thread my_threads <- gm_threads(num_results = 10)  # retrieve the latest thread by retrieving the first ID  latest_thread <- gm_thread(gm_id(my_threads)[[1]])  # The messages in the thread will now be in a list latest_thread$messages  # Retrieve parts of a specific message with the accessors my_msg <- latest_thread$messages[[1]]  gm_to(my_msg) gm_from(my_msg) gm_date(my_msg) gm_subject(my_msg) gm_body(my_msg)  # If a message has attachments, download them all locally with `gm_save_attachments()`. gm_save_attachments(my_msg)"},{"path":"https://gmailr.r-lib.org/dev/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Access the Gmail RESTful API","text":"drafts: my_drafts = gm_drafts() history: my_history = history(start_num) labels: my_labels = gm_labels() messages: my_messages = gm_messages(\"search query\") threads: my_threads = gm_threads(\"search query\") Create send emails drafts: see sending_messages vignette manage email labels programmatically: modify_thread(thread_id, add_labels=c(\"label_1\"), remove_labels=c(\"label_2\")) messages: gm_trash_message(message_id) threads: trash_thread(thread_id) messages: gm_untrash_message(message_id) threads: untrash_thread(thread_id) messages: gm_delete_message(message_id) threads: delete_thread(thread_id)","code":""},{"path":"https://gmailr.r-lib.org/dev/index.html","id":"using-gmailr-in-deployed-applications","dir":"","previous_headings":"","what":"Using gmailr in deployed applications","title":"Access the Gmail RESTful API","text":"using gmailr deployed application need copy two pieces deployed location. JSON OAuth client. OAuth token cache, default return value rappdirs::user_cache_dir(\"gargle\"). easiest thing ensure copying gmailr oauth token set explicitly locally, e.g. following.","code":""},{"path":"https://gmailr.r-lib.org/dev/index.html","id":"run-locally","dir":"","previous_headings":"Using gmailr in deployed applications","what":"Run locally","title":"Access the Gmail RESTful API","text":"copy credentials.json .secret directory remote location.","code":"# Configure your app gm_auth_configure(path = \"credentials.json\")  # Authenticate with the new cache, store tokens in .secret gm_auth(cache = \".secret\") # Go through the oauth flow"},{"path":"https://gmailr.r-lib.org/dev/index.html","id":"run-remotely","dir":"","previous_headings":"Using gmailr in deployed applications","what":"Run remotely","title":"Access the Gmail RESTful API","text":"additional details dealing non-interactive auth gargle documentation.","code":"# Configure your app gm_auth_configure(path = \"credentials.json\")  # Authenticate with the tokens in the copied cache gm_auth(email = TRUE, cache = \".secret\")"},{"path":"https://gmailr.r-lib.org/dev/index.html","id":"policies","dir":"","previous_headings":"","what":"Policies","title":"Access the Gmail RESTful API","text":"Privacy policy","code":""},{"path":"https://gmailr.r-lib.org/dev/index.html","id":"community-examples","dir":"","previous_headings":"","what":"Community Examples","title":"Access the Gmail RESTful API","text":"Send Email R - Jenny Bryan (@jennybc)","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods to get values from message or drafts — gm_to","title":"Methods to get values from message or drafts — gm_to","text":"Methods get values message drafts","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods to get values from message or drafts — gm_to","text":"","code":"gm_to(x, ...)  gm_from(x, ...)  gm_cc(x, ...)  gm_bcc(x, ...)  gm_date(x, ...)  gm_subject(x, ...)"},{"path":"https://gmailr.r-lib.org/dev/reference/accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods to get values from message or drafts — gm_to","text":"x object get set field ... parameters passed methods","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/as.character.mime.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a mime object to character representation — as.character.mime","title":"Convert a mime object to character representation — as.character.mime","text":"function converts mime object character vector","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/as.character.mime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a mime object to character representation — as.character.mime","text":"","code":"# S3 method for mime as.character(x, newline = \"\\r\\n\", ...)"},{"path":"https://gmailr.r-lib.org/dev/reference/as.character.mime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a mime object to character representation — as.character.mime","text":"x object convert newline value use newline character ... arguments ignored","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_attachment.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve an attachment to a message — gm_attachment","title":"Retrieve an attachment to a message — gm_attachment","text":"low level function retrieve attachment message id attachment message. users better using gm_save_attachments() automatically save attachments given message.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_attachment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve an attachment to a message — gm_attachment","text":"","code":"gm_attachment(id, message_id, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_attachment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve an attachment to a message — gm_attachment","text":"id id attachment message_id id parent message user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_attachment.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve an attachment to a message — gm_attachment","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.messages.attachments/get","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_attachment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve an attachment to a message — gm_attachment","text":"","code":"if (FALSE) { my_attachment <- attachment(\"a32e324b\", \"12345\") # save attachment to a file gm_save_attachment(my_attachment, \"photo.jpg\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_attachments.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve information about attachments — gm_attachments","title":"Retrieve information about attachments — gm_attachments","text":"Retrieve information attachments","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_attachments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve information about attachments — gm_attachments","text":"","code":"gm_attachments(x, ...)"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_attachments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve information about attachments — gm_attachments","text":"x object retrieve attachment information. ... parameters passed methods","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_attachments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve information about attachments — gm_attachments","text":"data.frame filename, type, size id attachment message.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authorize gmailr — gm_auth","title":"Authorize gmailr — gm_auth","text":"Authorize gmailr view manage Gmail projects. function wrapper around gargle::token_fetch(). default, directed web browser, asked sign Google account, grant gmailr permission operate behalf Google Gmail. default, permission, user credentials cached folder home directory, can automatically refreshed, necessary. Storage user level means token can used across multiple projects tokens less likely synced cloud accident. interacting R within browser (applies RStudio Server, Posit Workbench, Posit Cloud, Google Colaboratory), need variant flow, known --band auth (\"oob\") pseudo-oob. happen automatically, can request explicitly use_oob = TRUE , persistently, setting option via options(gargle_oob_default = TRUE).","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authorize gmailr — gm_auth","text":"","code":"gm_auth(   email = gm_default_email(),   path = NULL,   scopes = \"full\",   cache = gargle::gargle_oauth_cache(),   use_oob = gargle::gargle_oob_default(),   token = NULL )"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authorize gmailr — gm_auth","text":"email Optional. specified, email can take several different forms: \"jane@gmail.com\", .e. actual email address. allows user target specific Google identity. specified, used token lookup, .e. determine suitable token already available cache. token found, email used pre-select targeted Google identity OAuth chooser. (Note, however, email associated token cached always determined token , never argument). \"*@example.com\", .e. domain-glob pattern. can helpful need code \"just works\" alice@example.com bob@example.com. TRUE means approving email auto-discovery. exactly one matching token found cache, used. FALSE NA mean want ignore token cache force new OAuth dance browser. Defaults option named \"gargle_oauth_email\", retrieved gargle_oauth_email() (unless wrapper package implements different default behavior). path JSON identifying service account, one forms supported txt argument jsonlite::fromJSON() (typically, file path JSON string). scopes One API scopes. scope can specified full , Gmail API-specific scopes, abbreviated form recognized gm_scopes(): \"full\" = \"https://mail.google.com/\" (default) \"gmail.compose\" = \"https://www.googleapis.com/auth/gmail.compose\" \"gmail.readonly\" = \"https://www.googleapis.com/auth/gmail.readonly\" \"gmail.labels\" = \"https://www.googleapis.com/auth/gmail.labels\" \"gmail.send\" = \"https://www.googleapis.com/auth/gmail.send\" \"gmail.insert\" = \"https://www.googleapis.com/auth/gmail.insert\" \"gmail.modify\" = \"https://www.googleapis.com/auth/gmail.modify\" \"gmail.metadata\" = \"https://www.googleapis.com/auth/gmail.metadata\" \"gmail.settings_basic\" = \"https://www.googleapis.com/auth/gmail.settings.basic\" \"gmail.settings_sharing\" = \"https://www.googleapis.com/auth/gmail.settings.sharing\" See https://developers.google.com/gmail/api/auth/scopes details permissions scope. cache Specifies OAuth token cache. Defaults option named \"gargle_oauth_cache\", retrieved via gargle_oauth_cache(). use_oob Whether use --band authentication (, perhaps, variant implemented gargle known \"pseudo-oob\") first acquiring token. Defaults value returned gargle_oob_default(). Note (pseudo-)oob auth affects initial OAuth dance. retrieve (possibly refresh) cached token, use_oob effect. token token class Token2.0 object httr's class request, .e. token prepared httr::config() Token2.0 auth_token component.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_auth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Authorize gmailr — gm_auth","text":"users, time, need call gm_auth() explicitly -- triggered first action requires authorization. Even called, default arguments often suffice. However, necessary, function allows user explicitly: Declare Google identity use, via email address. multiple cached tokens, can clarify one use. can also force gmailr switch one identity another. cached token email, triggers return browser choose identity give consent. can specify just domain using glob pattern. means script containing email = \"*@example.com\" can run without tweaks machine either alice@example.com bob@example.com. Use service account token workload identity federation. Bring Token2.0. Specify non-default behavior re: token caching --bound authentication. Customize scopes. details many ways find token, see gargle::token_fetch(). deeper control auth, use gm_auth_configure() bring OAuth client API key. Read gargle options, see gargle::gargle_options.","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authorize gmailr — gm_auth","text":"","code":"if (FALSE) { # rlang::is_interactive() # load/refresh existing credentials, if available # otherwise, go to browser for authentication and authorization gm_auth()  # indicate the specific identity you want to auth as gm_auth(email = \"jim@example.com\")  # force a new browser dance, i.e. don't even try to use existing user # credentials gm_auth(email = NA)  # use a 'read only' scope, so it's impossible to, e.g., send or delete email gm_auth(scopes = \"gmail.readonly\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_auth_configure.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit auth configuration — gm_auth_configure","title":"Edit auth configuration — gm_auth_configure","text":"See article Set OAuth client instructions get OAuth client. can use gm_auth_configure() register client use gmailr. gm_oauth_client() retrieves currently configured OAuth client.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_auth_configure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit auth configuration — gm_auth_configure","text":"","code":"gm_auth_configure(   client = NULL,   path = gm_default_oauth_client(),   key = deprecated(),   secret = deprecated(),   appname = deprecated(),   app = deprecated() )  gm_oauth_client()"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_auth_configure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit auth configuration — gm_auth_configure","text":"client Google OAuth client, presumably constructed via gargle::gargle_oauth_client_from_json(). Note, however, preferred specify client JSON, using path argument. path JSON downloaded Google Cloud Console, containing client id secret, one forms supported txt argument jsonlite::fromJSON() (typically, file path JSON string). key, secret, appname, app Use path (strongly recommended) client argument instead.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_auth_configure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit auth configuration — gm_auth_configure","text":"gm_auth_configure(): object R6 class gargle::AuthState, invisibly. gm_oauth_client(): current user-configured OAuth client.","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_auth_configure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edit auth configuration — gm_auth_configure","text":"","code":"if (FALSE) { # rlang::is_interactive() # if your OAuth client can be auto-discovered (see ?gm_default_oauth_client), # you don't need to provide anything! gm_auth_configure() } # see and store the current user-configured OAuth client (original_client <- gm_oauth_client()) #> NULL  # the preferred way to configure your own client is via a JSON file # downloaded from Google Developers Console # this example JSON is indicative, but fake path_to_json <- system.file(   \"extdata\", \"client_secret_installed.googleusercontent.com.json\",   package = \"gargle\" ) gm_auth_configure(path = path_to_json)  # confirm that a (fake) OAuth client is now configured gm_oauth_client() #> <gargle_oauth_client> #> name: a_project_d1c5a8066d2cbe48e8d94514dd286163 #> id: abc.apps.googleusercontent.com #> secret: <REDACTED> #> type: installed #> redirect_uris: http://localhost  # restore original auth config gm_auth_configure(client = original_client)"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the body text of a message or draft — gm_body","title":"Get the body text of a message or draft — gm_body","text":"Get body text message draft","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the body text of a message or draft — gm_body","text":"","code":"gm_body(x, ...)"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the body text of a message or draft — gm_body","text":"x object retrieve body ... parameters passed methods","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_body.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the body text of a message or draft — gm_body","text":"","code":"if (FALSE) { gm_body(my_message) gm_body(my_draft) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_create_draft.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a draft from a mime message — gm_create_draft","title":"Create a draft from a mime message — gm_create_draft","text":"Create draft mime message","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_create_draft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a draft from a mime message — gm_create_draft","text":"","code":"gm_create_draft(mail, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_create_draft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a draft from a mime message — gm_create_draft","text":"mail mime mail message created mime user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_create_draft.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a draft from a mime message — gm_create_draft","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.drafts/create","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_create_draft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a draft from a mime message — gm_create_draft","text":"","code":"if (FALSE) { gm_create_draft(gm_mime(   From = \"you@me.com\", To = \"any@one.com\",   Subject = \"hello\", \"how are you doing?\" )) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_create_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new label — gm_create_label","title":"Create a new label — gm_create_label","text":"Function create label.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_create_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new label — gm_create_label","text":"","code":"gm_create_label(   name,   label_list_visibility = c(\"show\", \"hide\", \"show_unread\"),   message_list_visibility = c(\"show\", \"hide\"),   user_id = \"me\" )"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_create_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new label — gm_create_label","text":"name name give new label label_list_visibility visibility label label list Gmail web interface. message_list_visibility visibility messages label message list Gmail web interface. user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_create_label.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a new label — gm_create_label","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.labels/create","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_deauth.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear current token — gm_deauth","title":"Clear current token — gm_deauth","text":"Clears currently stored token. next time gmailr needs token, token acquisition process starts , fresh call gm_auth() , therefore, internally, call gargle::token_fetch(). Unlike packages use gargle, gmailr usable de-authorized state. Therefore, calling gm_deauth() clears token, .e. imply subsequent requests made API key lieu token.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_deauth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear current token — gm_deauth","text":"","code":"gm_deauth()"},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_deauth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear current token — gm_deauth","text":"","code":"if (FALSE) { # rlang::is_interactive() gm_deauth() }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_draft.html","id":null,"dir":"Reference","previous_headings":"","what":"Permanently delete a single draft — gm_delete_draft","title":"Permanently delete a single draft — gm_delete_draft","text":"Function delete given draft id.  undone!","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_draft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permanently delete a single draft — gm_delete_draft","text":"","code":"gm_delete_draft(id, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_draft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permanently delete a single draft — gm_delete_draft","text":"id message id access user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_draft.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Permanently delete a single draft — gm_delete_draft","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.drafts/delete","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_draft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permanently delete a single draft — gm_delete_draft","text":"","code":"if (FALSE) { delete_draft(\"12345\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Permanently delete a label — gm_delete_label","title":"Permanently delete a label — gm_delete_label","text":"Function delete label id.  undone!","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permanently delete a label — gm_delete_label","text":"","code":"gm_delete_label(id, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permanently delete a label — gm_delete_label","text":"id label id retrieve user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_label.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Permanently delete a label — gm_delete_label","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.labels/delete","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Permanently delete a single message — gm_delete_message","title":"Permanently delete a single message — gm_delete_message","text":"Function delete given message id.  undone!","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permanently delete a single message — gm_delete_message","text":"","code":"gm_delete_message(id, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permanently delete a single message — gm_delete_message","text":"id message id access user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_message.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Permanently delete a single message — gm_delete_message","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.messages/delete","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permanently delete a single message — gm_delete_message","text":"","code":"if (FALSE) { gm_delete_message(\"12345\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Permanently delete a single thread. — gm_delete_thread","title":"Permanently delete a single thread. — gm_delete_thread","text":"Function delete given thread id.  undone!","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_thread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permanently delete a single thread. — gm_delete_thread","text":"","code":"gm_delete_thread(id, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_thread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permanently delete a single thread. — gm_delete_thread","text":"id thread id access user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_thread.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Permanently delete a single thread. — gm_delete_thread","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.threads/delete","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_delete_thread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permanently delete a single thread. — gm_delete_thread","text":"","code":"if (FALSE) { delete_thread(12345) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_draft.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single draft — gm_draft","title":"Get a single draft — gm_draft","text":"Function retrieve given draft <-","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_draft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single draft — gm_draft","text":"","code":"gm_draft(id, user_id = \"me\", format = c(\"full\", \"minimal\", \"raw\"))"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_draft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single draft — gm_draft","text":"id draft id access user_id gmail user_id access, special value '' indicates authenticated user. format format draft returned","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_draft.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a single draft — gm_draft","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.drafts/get","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_draft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single draft — gm_draft","text":"","code":"if (FALSE) { my_draft <- gm_draft(\"12345\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_drafts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of drafts — gm_drafts","title":"Get a list of drafts — gm_drafts","text":"Get list drafts possibly matching given query string.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_drafts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of drafts — gm_drafts","text":"","code":"gm_drafts(num_results = NULL, page_token = NULL, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_drafts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of drafts — gm_drafts","text":"num_results number results return. page_token retrieve specific page results user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_drafts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a list of drafts — gm_drafts","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.drafts/list","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_drafts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of drafts — gm_drafts","text":"","code":"if (FALSE) { my_drafts <- gm_drafts()  first_10_drafts <- gm_drafts(10) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_has_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Is there a token on hand? — gm_has_token","title":"Is there a token on hand? — gm_has_token","text":"Reports whether gmailr stored token, ready use downstream requests.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_has_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is there a token on hand? — gm_has_token","text":"","code":"gm_has_token()"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_has_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is there a token on hand? — gm_has_token","text":"Logical.","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_has_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is there a token on hand? — gm_has_token","text":"","code":"gm_has_token() #> [1] FALSE"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve change history for the inbox — gm_history","title":"Retrieve change history for the inbox — gm_history","text":"Retrieves history results chronological order","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve change history for the inbox — gm_history","text":"","code":"gm_history(   start_history_id = NULL,   num_results = NULL,   label_id = NULL,   page_token = NULL,   user_id = \"me\" )"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve change history for the inbox — gm_history","text":"start_history_id point start history.  historyId can obtained message, thread previous list response. num_results number results return, max per page 100 label_id filter history label page_token retrieve specific page results user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_history.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve change history for the inbox — gm_history","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.history/list","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve change history for the inbox — gm_history","text":"","code":"if (FALSE) { my_history <- history(\"10\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the id of a gmailr object — gm_id","title":"Get the id of a gmailr object — gm_id","text":"Get id gmailr object","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the id of a gmailr object — gm_id","text":"","code":"gm_id(x, ...)  # S3 method for gmail_messages gm_id(x, what = c(\"message_id\", \"thread_id\"), ...)"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the id of a gmailr object — gm_id","text":"x object retrieve id ... parameters passed methods type id return","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the id of a gmailr object — gm_id","text":"","code":"if (FALSE) { gm_id(my_message) gm_id(my_draft) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_import_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a message into the gmail mailbox from a mime message — gm_import_message","title":"Import a message into the gmail mailbox from a mime message — gm_import_message","text":"Import message gmail mailbox mime message","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_import_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a message into the gmail mailbox from a mime message — gm_import_message","text":"","code":"gm_import_message(   mail,   label_ids,   type = c(\"multipart\", \"media\", \"resumable\"),   internal_date_source = c(\"dateHeader\", \"recievedTime\"),   user_id = \"me\" )"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_import_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a message into the gmail mailbox from a mime message — gm_import_message","text":"mail mime mail message created mime label_ids optional label ids apply message type type upload perform internal_date_source whether date object based date message received gmail. user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_import_message.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import a message into the gmail mailbox from a mime message — gm_import_message","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.messages/import","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_import_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a message into the gmail mailbox from a mime message — gm_import_message","text":"","code":"if (FALSE) { gm_import_message(gm_mime(   From = \"you@me.com\", To = \"any@one.com\",   Subject = \"hello\", \"how are you doing?\" )) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_insert_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert a message into the gmail mailbox from a mime message — gm_insert_message","title":"Insert a message into the gmail mailbox from a mime message — gm_insert_message","text":"Insert message gmail mailbox mime message","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_insert_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert a message into the gmail mailbox from a mime message — gm_insert_message","text":"","code":"gm_insert_message(   mail,   label_ids,   type = c(\"multipart\", \"media\", \"resumable\"),   internal_date_source = c(\"dateHeader\", \"recievedTime\"),   user_id = \"me\" )"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_insert_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert a message into the gmail mailbox from a mime message — gm_insert_message","text":"mail mime mail message created mime label_ids optional label ids apply message type type upload perform internal_date_source whether date object based date message received gmail. user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_insert_message.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Insert a message into the gmail mailbox from a mime message — gm_insert_message","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.messages/insert","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_insert_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert a message into the gmail mailbox from a mime message — gm_insert_message","text":"","code":"if (FALSE) { gm_insert_message(gm_mime(   From = \"you@me.com\", To = \"any@one.com\",   Subject = \"hello\", \"how are you doing?\" )) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a specific label — gm_label","title":"Get a specific label — gm_label","text":"Get specific label id user_id.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a specific label — gm_label","text":"","code":"gm_label(id, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a specific label — gm_label","text":"id label id retrieve user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_label.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a specific label — gm_label","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.labels/get","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of all labels — gm_labels","title":"Get a list of all labels — gm_labels","text":"Get list labels user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of all labels — gm_labels","text":"","code":"gm_labels(user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of all labels — gm_labels","text":"user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_labels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a list of all labels — gm_labels","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.labels/list","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of all labels — gm_labels","text":"","code":"if (FALSE) { my_labels <- gm_labels() }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_last_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Response from the last query — gm_last_response","title":"Response from the last query — gm_last_response","text":"Response last query","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_last_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Response from the last query — gm_last_response","text":"","code":"gm_last_response()"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single message — gm_message","title":"Get a single message — gm_message","text":"Function retrieve given message id","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single message — gm_message","text":"","code":"gm_message(   id,   user_id = \"me\",   format = c(\"full\", \"metadata\", \"minimal\", \"raw\") )"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single message — gm_message","text":"id message id access user_id gmail user_id access, special value '' indicates authenticated user. format format message returned","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_message.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a single message — gm_message","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.messages","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single message — gm_message","text":"","code":"if (FALSE) { my_message <- gm_message(12345) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_messages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of messages — gm_messages","title":"Get a list of messages — gm_messages","text":"Get list messages possibly matching given query string.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_messages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of messages — gm_messages","text":"","code":"gm_messages(   search = NULL,   num_results = NULL,   label_ids = NULL,   include_spam_trash = NULL,   page_token = NULL,   user_id = \"me\" )"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_messages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of messages — gm_messages","text":"search query use, format gmail search box. num_results number results return. label_ids restrict search given labels include_spam_trash boolean whether include spam trash folders search page_token retrieve specific page results user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_messages.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a list of messages — gm_messages","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.messages/list","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_messages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of messages — gm_messages","text":"","code":"if (FALSE) { # Search for R, return 10 results using label 1 including spam and trash folders my_messages <- gm_messages(\"R\", 10, \"label_1\", TRUE) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_mime.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a mime formatted message object — gm_mime","title":"Create a mime formatted message object — gm_mime","text":"functions create MIME message. can created atomically using gm_mime() iteratively using various accessors.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_mime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a mime formatted message object — gm_mime","text":"","code":"gm_mime(..., attr = NULL, body = NULL, parts = list())  # S3 method for mime gm_to(x, val, ...)  # S3 method for mime gm_from(x, val, ...)  # S3 method for mime gm_cc(x, val, ...)  # S3 method for mime gm_bcc(x, val, ...)  # S3 method for mime gm_subject(x, val, ...)  gm_text_body(   mime,   body,   content_type = \"text/plain\",   charset = \"utf-8\",   encoding = \"quoted-printable\",   format = \"flowed\",   ... )  gm_html_body(   mime,   body,   content_type = \"text/html\",   charset = \"utf-8\",   encoding = \"base64\",   ... )  gm_attach_part(mime, part, id = NULL, ...)  gm_attach_file(mime, filename, type = NULL, id = NULL, ...)"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_mime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a mime formatted message object — gm_mime","text":"... additional parameters put attr field attr attributes pass message body Message body. parts mime parts pass message x object whose fields setting val value set, can vector, case values joined \", \". mime message. content_type content type use body. charset character set use body. encoding transfer encoding use body. format mime format use body. part Message part attach id content ID attachment filename name file attach type mime type attached file","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_mime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a mime formatted message object — gm_mime","text":"","code":"# using the field functions msg <- gm_mime() |>   gm_from(\"james.f.hester@gmail.com\") |>   gm_to(\"asdf@asdf.com\") |>   gm_text_body(\"Test Message\")  # alternatively you can set the fields using gm_mime(), however you have #  to use properly formatted MIME names msg <- gm_mime(   From = \"james.f.hester@gmail.com\",   To = \"asdf@asdf.com\" ) |>   gm_html_body(\"<b>Test<\\b> Message\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_modify_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the labels on a message — gm_modify_message","title":"Modify the labels on a message — gm_modify_message","text":"Function modify labels given message id.  Note need use label ID arguments function, label name.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_modify_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the labels on a message — gm_modify_message","text":"","code":"gm_modify_message(id, add_labels = NULL, remove_labels = NULL, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_modify_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the labels on a message — gm_modify_message","text":"id message id access add_labels label IDs add specified message remove_labels label IDs remove specified message user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_modify_message.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Modify the labels on a message — gm_modify_message","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.messages/modify","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_modify_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify the labels on a message — gm_modify_message","text":"","code":"if (FALSE) { gm_modify_message(12345, add_labels = \"label_1\") gm_modify_message(12345, remove_labels = \"label_1\") # add and remove at the same time gm_modify_message(12345, add_labels = \"label_2\", remove_labels = \"label_1\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_modify_thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the labels on a thread — gm_modify_thread","title":"Modify the labels on a thread — gm_modify_thread","text":"Function modify labels given thread id.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_modify_thread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the labels on a thread — gm_modify_thread","text":"","code":"gm_modify_thread(   id,   add_labels = character(0),   remove_labels = character(0),   user_id = \"me\" )"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_modify_thread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the labels on a thread — gm_modify_thread","text":"id thread id access add_labels labels add specified thread remove_labels labels remove specified thread user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_modify_thread.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Modify the labels on a thread — gm_modify_thread","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.threads/modify","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_modify_thread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify the labels on a thread — gm_modify_thread","text":"","code":"if (FALSE) { modify_thread(12345, add_labels = \"label_1\") modify_thread(12345, remove_labels = \"label_1\") # add and remove at the same time modify_thread(12345, add_labels = \"label_2\", remove_labels = \"label_1\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_oauth_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Get currently configured OAuth app (deprecated) — gm_oauth_app","title":"Get currently configured OAuth app (deprecated) — gm_oauth_app","text":"light new gargle::gargle_oauth_client() constructor class name, gm_oauth_app() replaced gm_oauth_client().","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_oauth_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get currently configured OAuth app (deprecated) — gm_oauth_app","text":"","code":"gm_oauth_app()"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get info on current gmail profile — gm_profile","title":"Get info on current gmail profile — gm_profile","text":"Reveals information profile associated current token.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get info on current gmail profile — gm_profile","text":"","code":"gm_profile(user_id = \"me\", verbose = TRUE)"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get info on current gmail profile — gm_profile","text":"user_id gmail user_id access, special value '' indicates authenticated user. verbose Logical, indicating whether print informative messages (default TRUE).","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get info on current gmail profile — gm_profile","text":"list class gmail_profile.","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get info on current gmail profile — gm_profile","text":"","code":"if (FALSE) { gm_profile()  ## more info is returned than is printed prof <- gm_profile() prof[[\"historyId\"]] }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_save_attachment.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the attachment to a file — gm_save_attachment","title":"Save the attachment to a file — gm_save_attachment","text":"low level function works attachments retrieved gm_attachment(). save attachment directly message see gm_save_attachments(), higher level interface suitable uses.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_save_attachment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the attachment to a file — gm_save_attachment","text":"","code":"gm_save_attachment(x, filename)"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_save_attachment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the attachment to a file — gm_save_attachment","text":"x attachment save filename location save ","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_save_attachment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save the attachment to a file — gm_save_attachment","text":"","code":"if (FALSE) { my_attachment <- attachment(\"a32e324b\", \"12345\") # save attachment to a file save_attachment(my_attachment, \"photo.jpg\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_save_attachments.html","id":null,"dir":"Reference","previous_headings":"","what":"Save attachments to a message — gm_save_attachments","title":"Save attachments to a message — gm_save_attachments","text":"Function retrieve save attachments message id message.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_save_attachments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save attachments to a message — gm_save_attachments","text":"","code":"gm_save_attachments(x, attachment_id = NULL, path = \".\", user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_save_attachments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save attachments to a message — gm_save_attachments","text":"x message attachment attachment_id id attachment save, none specified saves attachments path save attachments user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_save_attachments.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Save attachments to a message — gm_save_attachments","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.messages.attachments/get","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_save_attachments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save attachments to a message — gm_save_attachments","text":"","code":"if (FALSE) { # save all attachments save_attachments(my_message) # save a specific attachment save_attachments(my_message, \"a32e324b\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_scopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce scopes specific to the Gmail API — gm_scopes","title":"Produce scopes specific to the Gmail API — gm_scopes","text":"called arguments, gm_scopes() returns named character vector scopes associated Gmail API. gm_scopes(scopes =) given, abbreviated entry \"gmail.readonly\" expanded full scope (\"https://www.googleapis.com/auth/gmail.readonly\" case). Unrecognized scopes passed unchanged.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_scopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce scopes specific to the Gmail API — gm_scopes","text":"","code":"gm_scopes(scopes = NULL)"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_scopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce scopes specific to the Gmail API — gm_scopes","text":"scopes One API scopes. scope can specified full , Gmail API-specific scopes, abbreviated form recognized gm_scopes(): \"full\" = \"https://mail.google.com/\" (default) \"gmail.compose\" = \"https://www.googleapis.com/auth/gmail.compose\" \"gmail.readonly\" = \"https://www.googleapis.com/auth/gmail.readonly\" \"gmail.labels\" = \"https://www.googleapis.com/auth/gmail.labels\" \"gmail.send\" = \"https://www.googleapis.com/auth/gmail.send\" \"gmail.insert\" = \"https://www.googleapis.com/auth/gmail.insert\" \"gmail.modify\" = \"https://www.googleapis.com/auth/gmail.modify\" \"gmail.metadata\" = \"https://www.googleapis.com/auth/gmail.metadata\" \"gmail.settings_basic\" = \"https://www.googleapis.com/auth/gmail.settings.basic\" \"gmail.settings_sharing\" = \"https://www.googleapis.com/auth/gmail.settings.sharing\" See https://developers.google.com/gmail/api/auth/scopes details permissions scope.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_scopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce scopes specific to the Gmail API — gm_scopes","text":"character vector scopes.","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_scopes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce scopes specific to the Gmail API — gm_scopes","text":"","code":"gm_scopes(\"full\") #> [1] \"https://mail.google.com/\" gm_scopes(\"gmail.readonly\") #> [1] \"https://www.googleapis.com/auth/gmail.readonly\" gm_scopes() #>                                                     full  #>                               \"https://mail.google.com/\"  #>                                            gmail.compose  #>          \"https://www.googleapis.com/auth/gmail.compose\"  #>                                           gmail.readonly  #>         \"https://www.googleapis.com/auth/gmail.readonly\"  #>                                             gmail.labels  #>           \"https://www.googleapis.com/auth/gmail.labels\"  #>                                               gmail.send  #>             \"https://www.googleapis.com/auth/gmail.send\"  #>                                             gmail.insert  #>           \"https://www.googleapis.com/auth/gmail.insert\"  #>                                             gmail.modify  #>           \"https://www.googleapis.com/auth/gmail.modify\"  #>                                           gmail.metadata  #>         \"https://www.googleapis.com/auth/gmail.metadata\"  #>                                     gmail.settings_basic  #>   \"https://www.googleapis.com/auth/gmail.settings.basic\"  #>                                   gmail.settings_sharing  #> \"https://www.googleapis.com/auth/gmail.settings.sharing\""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_send_draft.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a draft — gm_send_draft","title":"Send a draft — gm_send_draft","text":"Send draft recipients , CC, Bcc headers.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_send_draft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a draft — gm_send_draft","text":"","code":"gm_send_draft(draft, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_send_draft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a draft — gm_send_draft","text":"draft draft send user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_send_draft.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Send a draft — gm_send_draft","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.drafts/send","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_send_draft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send a draft — gm_send_draft","text":"","code":"if (FALSE) { draft <- gm_create_draft(gm_mime(   From = \"you@me.com\", To = \"any@one.com\",   Subject = \"hello\", \"how are you doing?\" )) gm_send_draft(draft) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_send_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a message from a mime message — gm_send_message","title":"Send a message from a mime message — gm_send_message","text":"Send message mime message","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_send_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a message from a mime message — gm_send_message","text":"","code":"gm_send_message(   mail,   type = c(\"multipart\", \"media\", \"resumable\"),   thread_id = NULL,   user_id = \"me\" )"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_send_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a message from a mime message — gm_send_message","text":"mail mime mail message created mime type type upload perform thread_id id thread send . user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_send_message.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Send a message from a mime message — gm_send_message","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.messages/send","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_send_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send a message from a mime message — gm_send_message","text":"","code":"if (FALSE) { gm_send_message(gm_mime(   from = \"you@me.com\", to = \"any@one.com\",   subject = \"hello\", \"how are you doing?\" )) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single thread — gm_thread","title":"Get a single thread — gm_thread","text":"Function retrieve given thread id","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_thread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single thread — gm_thread","text":"","code":"gm_thread(id, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_thread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single thread — gm_thread","text":"id thread id access user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_thread.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a single thread — gm_thread","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.threads","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_thread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single thread — gm_thread","text":"","code":"if (FALSE) { my_thread <- gm_thread(12345) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_threads.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of threads — gm_threads","title":"Get a list of threads — gm_threads","text":"Get list threads possibly matching given query string.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_threads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of threads — gm_threads","text":"","code":"gm_threads(   search = NULL,   num_results = NULL,   page_token = NULL,   label_ids = NULL,   include_spam_trash = NULL,   user_id = \"me\" )"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_threads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of threads — gm_threads","text":"search query use, format gmail search box. num_results number results return. page_token retrieve specific page results label_ids restrict search given labels include_spam_trash boolean whether include spam trash folders search user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_threads.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a list of threads — gm_threads","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.threads/list","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_threads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of threads — gm_threads","text":"","code":"if (FALSE) { my_threads <- gm_threads()  first_10_threads <- gm_threads(10) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce configured token — gm_token","title":"Produce configured token — gm_token","text":"internal use programming around Gmail API. Returns token pre-processed httr::config(). users need handle tokens \"hand\" , even need control, gm_auth() need. current token, gm_auth() called either load cache initiate OAuth2.0 flow. auth deactivated via gm_deauth(), gm_token() returns NULL.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce configured token — gm_token","text":"","code":"gm_token()"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce configured token — gm_token","text":"request object (S3 class provided httr).","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce configured token — gm_token","text":"","code":"if (FALSE) { # gm_has_token() gm_token() }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_trash_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a single message to the trash — gm_trash_message","title":"Send a single message to the trash — gm_trash_message","text":"Function trash given message id.  can undone gm_untrash_message().","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_trash_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a single message to the trash — gm_trash_message","text":"","code":"gm_trash_message(id, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_trash_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a single message to the trash — gm_trash_message","text":"id message id access user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_trash_message.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Send a single message to the trash — gm_trash_message","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.messages/trash","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_trash_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send a single message to the trash — gm_trash_message","text":"","code":"if (FALSE) { gm_trash_message(\"12345\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_trash_thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a single thread to the trash — gm_trash_thread","title":"Send a single thread to the trash — gm_trash_thread","text":"Function trash given thread id.  can undone gm_untrash_thread().","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_trash_thread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a single thread to the trash — gm_trash_thread","text":"","code":"gm_trash_thread(id, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_trash_thread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a single thread to the trash — gm_trash_thread","text":"id thread id access user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_trash_thread.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Send a single thread to the trash — gm_trash_thread","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.threads/trash","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_trash_thread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send a single thread to the trash — gm_trash_thread","text":"","code":"if (FALSE) { trash_thread(12345) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_untrash_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a single message from the trash — gm_untrash_message","title":"Remove a single message from the trash — gm_untrash_message","text":"Function trash given message id.  can undone gm_untrash_message().","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_untrash_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a single message from the trash — gm_untrash_message","text":"","code":"gm_untrash_message(id, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_untrash_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a single message from the trash — gm_untrash_message","text":"id message id access user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_untrash_message.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Remove a single message from the trash — gm_untrash_message","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.messages/trash","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_untrash_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a single message from the trash — gm_untrash_message","text":"","code":"if (FALSE) { gm_untrash_message(\"12345\") }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_untrash_thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a single thread from the trash. — gm_untrash_thread","title":"Remove a single thread from the trash. — gm_untrash_thread","text":"Function untrash given thread id.  can reverse results previous trash_thread().","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_untrash_thread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a single thread from the trash. — gm_untrash_thread","text":"","code":"gm_untrash_thread(id, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_untrash_thread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a single thread from the trash. — gm_untrash_thread","text":"id thread id access user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_untrash_thread.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Remove a single thread from the trash. — gm_untrash_thread","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.threads/untrash","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gm_untrash_thread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a single thread from the trash. — gm_untrash_thread","text":"","code":"if (FALSE) { untrash_thread(12345) }"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_update_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a existing label. — gm_update_label","title":"Update a existing label. — gm_update_label","text":"Get specific label id user_id.  update_label_patch identical update_label latter uses HTTP PATCH allow partial update.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_update_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a existing label. — gm_update_label","text":"","code":"gm_update_label(id, label, user_id = \"me\")  gm_update_label_patch(id, label, user_id = \"me\")"},{"path":"https://gmailr.r-lib.org/dev/reference/gm_update_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a existing label. — gm_update_label","text":"id label id update label label fields update user_id gmail user_id access, special value '' indicates authenticated user.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gm_update_label.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Update a existing label. — gm_update_label","text":"https://developers.google.com/gmail/api/reference/rest/v1/users.labels/update https://developers.google.com/gmail/api/reference/rest/v1/users.labels/patch","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gmailr-configuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Configuring gmailr — gmailr-configuration","title":"Configuring gmailr — gmailr-configuration","text":"gmailr can configured various environment variables, accessed wrapper functions provide additional smarts.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gmailr-configuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configuring gmailr — gmailr-configuration","text":"","code":"gm_default_email()  gm_default_oauth_client()"},{"path":"https://gmailr.r-lib.org/dev/reference/gmailr-configuration.html","id":"gm-default-email-","dir":"Reference","previous_headings":"","what":"gm_default_email()","title":"Configuring gmailr — gmailr-configuration","text":"gm_default_email() returns environment variable GMAILR_EMAIL, exists, gargle::gargle_oauth_email(), otherwise.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gmailr-configuration.html","id":"gm-default-oauth-client-","dir":"Reference","previous_headings":"","what":"gm_default_oauth_client()","title":"Configuring gmailr — gmailr-configuration","text":"gm_default_oauth_client() consults specific set locations, looking filepath JSON file represents OAuth client. file can downloaded APIs & Services section Google Cloud console https://console.cloud.google.com). search unfolds like : GMAILR_OAUTH_CLIENT environment variable: defined, assumed path target JSON file. .json file found directory returned rappdirs::user_data_dir(\"gmailr\"), whose filename uniquely matches regular expression \"client_secret.+[.]json$\". GMAILR_APP environment variable: supported backwards compatibility, preferable store JSON rappdirs::user_data_dir(\"gmailr\") store path GMAILR_OAUTH_CLIENT environment variable. inspirational snippet move JSON file downloaded right place auto-discovery gm_auth_configure():","code":"path_old <- \"~/Downloads/client_secret_123-abc.apps.googleusercontent.com.json\" d <- fs::dir_create(rappdirs::user_data_dir(\"gmailr\"), recurse = TRUE) fs::file_move(path_old, d)"},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gmailr-configuration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configuring gmailr — gmailr-configuration","text":"","code":"gm_default_email() #> NULL  withr::with_envvar(   c(GMAILR_EMAIL = \"jenny@example.com\"),   gm_default_email() ) #> [1] \"jenny@example.com\"  gm_default_oauth_client()  withr::with_envvar(   c(GMAILR_OAUTH_CLIENT = \"path/to/my-client.json\"),   gm_default_oauth_client() ) #> [1] \"path/to/my-client.json\""},{"path":"https://gmailr.r-lib.org/dev/reference/gmailr-deprecated-auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated auth — gmailr-deprecated-auth","title":"Deprecated auth — gmailr-deprecated-auth","text":"functions deprecated longer work.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gmailr-deprecated-auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated auth — gmailr-deprecated-auth","text":"","code":"clear_token()  gmail_auth(   scope = c(\"read_only\", \"modify\", \"compose\", \"full\"),   id = the$id,   secret = the$secret,   secret_file = NULL )  use_secret_file(filename)"},{"path":"https://gmailr.r-lib.org/dev/reference/gmailr-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — gmailr-deprecated","title":"Deprecated functions — gmailr-deprecated","text":"functions renamed, adding gm_ prefix. eliminate name conflicts packages (including base package). Starting gmailr 1.0.0 (released 2019-08-23), deprecated functions generated warning. gmailr 2.0.0, generate error completely removed future release.","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/gmailr-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — gmailr-deprecated","text":"","code":"id(x, ...)  to(x, ...)  from(x, ...)  cc(x, ...)  bcc(x, ...)  date(x, ...)  subject(x, ...)  body(x, ...)  message(...)  messages(...)  trash_message(...)  untrash_message(...)  delete_message(...)  modify_message(...)  attachment(...)  save_attachment(...)  save_attachments(...)  insert_message(...)  import_message(...)  send_message(...)  threads(...)  thread(...)  trash_thread(...)  untrash_thread(...)  delete_thread(...)  modify_thread(...)  draft(...)  drafts(...)  create_draft(...)  send_draft(...)  labels(...)  label(...)  update_label(...)  update_label_patch(...)  delete_label(...)  create_label(...)  history(...)  mime(...)  text_body(...)  html_body(...)  attach_part(...)  attach_file(...)"},{"path":"https://gmailr.r-lib.org/dev/reference/gmailr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gmailr: Access the 'Gmail' 'RESTful' API — gmailr-package","title":"gmailr: Access the 'Gmail' 'RESTful' API — gmailr-package","text":"interface 'Gmail' 'RESTful' API. Allows access 'Gmail' messages, threads, drafts labels.","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/reference/gmailr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gmailr: Access the 'Gmail' 'RESTful' API — gmailr-package","text":"Maintainer: Jennifer Bryan jenny@posit.co Authors: Jim Hester contributors: Posit Software, PBC [copyright holder, funder]","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/quoted_printable_encode.html","id":null,"dir":"Reference","previous_headings":"","what":"Encode text using quoted printable — quoted_printable_encode","title":"Encode text using quoted printable — quoted_printable_encode","text":"line wrapping output 76 characters Implementation derived perl MIME::QuotedPrint","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/quoted_printable_encode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encode text using quoted printable — quoted_printable_encode","text":"","code":"quoted_printable_encode(data)"},{"path":"https://gmailr.r-lib.org/dev/reference/quoted_printable_encode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encode text using quoted printable — quoted_printable_encode","text":"data data encode","code":""},{"path":"https://gmailr.r-lib.org/dev/reference/quoted_printable_encode.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Encode text using quoted printable — quoted_printable_encode","text":"http://search.cpan.org/~gaas/MIME-Base64-3.14/QuotedPrint.pm","code":""},{"path":[]},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"syncing-up-with-gargle-development-version","dir":"Changelog","previous_headings":"","what":"Syncing up with gargle","title":"gmailr (development version)","text":"Version 1.3.0 gargle introduced changes around OAuth gmailr syncing : gm_oauth_client() new function replace now-deprecated gm_oauth_app(). somewhat vocabulary change (“client” instead “app”), ’s really connected meaningful shift gargle, new appreciation different OAuth client types (e.g., “installed” vs. “web”). gm_oauth_client() (function ’s replacing, gm_oauth_app()) longer error configured OAuth client. first argument now named client, morally equivalent previous app, .e. essentially name change. key, secret, appname, app arguments deprecated. strong recommendation use path argument, either explicitly:: implicitly: works new default: gm_auth_configure(path = gm_default_oauth_client()). gm_default_oauth_client() new helper searches JSON file representing OAuth client sequence locations. (file)path least resistance place file directory returned rappdirs::user_data_dir(\"gmailr\"). Another alternative record filepath GMAILR_OAUTH_CLIENT environment variable. backwards compatibility, GMAILR_APP environment variable still consulted, generates warning (#166).","code":"gm_auth_configure(path = \"path/to/my-oauth-client.json\") gm_auth_configure()"},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"other-changes-development-version","dir":"Changelog","previous_headings":"","what":"Other changes","title":"gmailr (development version)","text":"gm_auth() longer checks OAuth client calling gargle::token_fetch(). allows auth methods work, large don’t need OAuth client, gargle::credentials_byo_oauth2() (#160, #186). Since lack OAuth client undoubtedly remains common reason gm_auth() fail, error message includes specific content OAuth client configured. gm_scopes() can now take character vector scopes, can actual scope short alias, e.g., \"gmail.readonly\", identifies scope associated Gmail API. called without arguments, gm_scopes() still returns named vector Gmail API-specific scopes, names associated short aliases. deprecation process legacy functions lack gm_ prefix advanced. functions still present, throw error directing user switch prefixed version. unexported helper gmailr:::gm_convert_file(list.files(pattern = \"[.]R$\", recursive = TRUE)) can used convert R files current directory new names (#95). Legacy auth functions clear_token(), gmail_auth(), use_secret_file() now throw error. gmailr longer Imports magrittr longer re-exports magrittr pipe (%>%). gmailr pipe-friendly package, originally done user convenience (#42). Since users (using R >= 4.1) now access base pipe (|>), now shown gmailr’s documentation. using R < 4.1 can still use gmailr magrittr::%>%, need library(magrittr) . gmailr examples use base pipe longer work R < 4.1. affected R versions, examples automatically converted regular section note might work.","code":""},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"gmailr-101","dir":"Changelog","previous_headings":"","what":"gmailr 1.0.1","title":"gmailr 1.0.1","text":"CRAN release: 2021-11-30 Jenny Bryan now maintainer","code":""},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"gmailr-100","dir":"Changelog","previous_headings":"","what":"gmailr 1.0.0","title":"gmailr 1.0.0","text":"CRAN release: 2019-08-23","code":""},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"breaking-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"gmailr 1.0.0","text":"functions now prefixed gm_*() avoid name conflicts packages (including base package), previous names deprecated removed future releases. Use gmailr:::gm_convert_file(list.files(pattern = \"[.]R$\", recursive = TRUE)) convert R files current directory new names. (#95) New gm_auth_configure() gm_auth() functions added conforming conventions gargle package. gmail_auth(), clear_token() use_secret_token() now deprecated removed future release. google application bundled previous gmailr releases removed, users now need create applications order use gmailr. See Setup section readme details. nessesary comply stricter enforement API terms service.","code":""},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"gmailr 1.0.0","text":"New gm_attachements() returns data.frame attachment information message draft (#10, #24). New gm_delete_draft() added delete draft email without sending trash. New gm_profile() function return gmail profile currently logged user (#114) New gm_scopes() function list available scopes, gmailr now requests full scope default (#90) detailed examples added README vignette, including adding referencing attachments HTML email.","code":""},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"minor-improvements-and-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"gmailr 1.0.0","text":"gm_body(), gm_to(), gm_from(), gm_cc(), gm_bcc() gm_subject() now automatically mark output UTF-8 (#47, #86) Quoted-printable now works smart quotes (#77) Unicode text can now used email headers, including Subject address fields, like Cc (#76, #78) print.gmail_message() now prints parts message defined (#88) now prints filenames attachments ().","code":""},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"gmailr-071","dir":"Changelog","previous_headings":"","what":"gmailr 0.7.1","title":"gmailr 0.7.1","text":"CRAN release: 2016-04-12 Bundle application token secret gmailr average user won’t need create application. Great number bug fixes Reworking print functions provide useful easy read output Added check null response fix bug DELETE requests (#79) @josibake","code":""},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"gmailr-050","dir":"Changelog","previous_headings":"","what":"gmailr 0.5.0","title":"gmailr 0.5.0","text":"CRAN release: 2014-09-19","code":""},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"major-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"gmailr 0.5.0","text":"Added ability create send drafts messages. (#5, #6) Added number tests mime message creation derived Email::Stuffer perl module.","code":""},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"minor-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Minor Fixes","title":"gmailr 0.5.0","text":"Namespace properly updated (#2) added extraction functions gmail_messages (#3)","code":""},{"path":"https://gmailr.r-lib.org/dev/news/index.html","id":"gmailr-001","dir":"Changelog","previous_headings":"","what":"gmailr 0.0.1","title":"gmailr 0.0.1","text":"CRAN release: 2014-07-26 Initial release","code":""}]
